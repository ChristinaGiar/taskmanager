{"ast":null,"code":"var _jsxFileName = \"/Users/cgiaramani/AEM-projects/to-do-mine/src/pages/AuthPage.js\";\nimport React from 'react';\nimport { Form, Link, useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const authAction = async _ref => {\n  let {\n    params,\n    request\n  } = _ref;\n  let searchParams = new URL(request.url).searchParams;\n  let isLogin = searchParams.get('mode') === 'login';\n  console.log(\"isLogin: \");\n  let formData = await request.formData();\n  const data = {\n    email: formData.get('email'),\n    password: formData.get('password')\n  };\n  console.log(data);\n  console.log(\"isLogin: \", isLogin, formData);\n  // CHECK IF WORKING\n};\n\nconst AuthPage = () => {\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"post\",\n    action: \"/\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","Form","Link","useSearchParams","authAction","params","request","searchParams","URL","url","isLogin","get","console","log","formData","data","email","password","AuthPage"],"sources":["/Users/cgiaramani/AEM-projects/to-do-mine/src/pages/AuthPage.js"],"sourcesContent":["import React from 'react';\nimport { Form, Link, useSearchParams } from 'react-router-dom';\n\nexport const authAction = async ({params, request}) => {\n\n  let searchParams = new URL(request.url).searchParams;\n  let isLogin = searchParams.get('mode')==='login';\n  console.log(\"isLogin: \");\n\n    let formData = await request.formData();\n    const data = {\n      email: formData.get('email'),\n      password: formData.get('password'),\n    };\n    console.log(data);\n    console.log(\"isLogin: \", isLogin, formData);\n    // CHECK IF WORKING\n}\n\nconst AuthPage = () => {\n  return (\n    <Form method=\"post\" action=\"/\">\n        <label htmlFor='email'/>\n        <input id=\"email\"></input> \n        <label htmlFor='password'/>\n        <input id=\"password\"></input> \n        <button>Login</button>\n    </Form>\n  )\n}\n\nexport default AuthPage;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,IAAI,EAAEC,eAAe,QAAQ,kBAAkB;AAAC;AAE/D,OAAO,MAAMC,UAAU,GAAG,cAA6B;EAAA,IAAtB;IAACC,MAAM;IAAEC;EAAO,CAAC;EAEhD,IAAIC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY;EACpD,IAAIG,OAAO,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC,KAAG,OAAO;EAChDC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EAEtB,IAAIC,QAAQ,GAAG,MAAMR,OAAO,CAACQ,QAAQ,EAAE;EACvC,MAAMC,IAAI,GAAG;IACXC,KAAK,EAAEF,QAAQ,CAACH,GAAG,CAAC,OAAO,CAAC;IAC5BM,QAAQ,EAAEH,QAAQ,CAACH,GAAG,CAAC,UAAU;EACnC,CAAC;EACDC,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;EACjBH,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,OAAO,EAAEI,QAAQ,CAAC;EAC3C;AACJ,CAAC;;AAED,MAAMI,QAAQ,GAAG,MAAM;EACrB,oBACE,QAAC,IAAI;IAAC,MAAM,EAAC,MAAM;IAAC,MAAM,EAAC,GAAG;IAAA,wBAC1B;MAAO,OAAO,EAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eACxB;MAAO,EAAE,EAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAS,eAC1B;MAAO,OAAO,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE,eAC3B;MAAO,EAAE,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAS,eAC7B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB;EAAA;IAAA;IAAA;IAAA;EAAA,QACnB;AAEX,CAAC;AAAA,KAVKA,QAAQ;AAYd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}