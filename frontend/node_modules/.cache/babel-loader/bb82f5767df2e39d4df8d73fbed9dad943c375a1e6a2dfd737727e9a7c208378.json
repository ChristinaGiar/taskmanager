{"ast":null,"code":"var _jsxFileName = \"/Users/cgiaramani/AEM-projects/to-do-mine/src/components/Panel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from 'react';\nimport Note from './Note';\nimport { useDrop } from 'react-dnd';\nimport { notesList, columnsList } from '../data/panel-data';\nimport Column from './Column';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DragDrop() {\n  _s();\n  const [cards, setCards] = useState(notesList); // declare the final destination/notes here\n  const [columns, setColumns] = useState(columnsList);\n  const moveImage = (dragIndex, hoverIndex) => {\n    setCards(prevcards => {\n      const newItems = prevcards.filter((_, idx) => idx !== dragIndex);\n      newItems.splice(hoverIndex, 0, cards[dragIndex]);\n      console.log(\"moveImage: \" + dragIndex, hoverIndex, newItems);\n      return [...newItems];\n    });\n  };\n  const addImageTocards = id => {\n    console.log(\"Dragging is over\"); // printed when isOver is true\n    const pictureList = notesList.filter(picture => id === picture.id); // find the dragged image\n    // notesList = notesList.filter((picture) => id !== picture.id);\n    setCards(cards => [...cards, pictureList[0]]); // add to the cards\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards\",\n      children: [columns.map(column => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"columnName\",\n            children: column.columnName.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Column, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)]\n        }, column.columnName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this);\n      }), cards.map((picture, index) => {\n        return /*#__PURE__*/_jsxDEV(Picture, {\n          id: picture.id,\n          url: picture.url,\n          index: index,\n          moveImage: moveImage\n          // ref={ref}\n        }, picture.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 28\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(DragDrop, \"B2PKZCUYMuLcwM3lWgW0rn38xMs=\");\n_c = DragDrop;\nexport default DragDrop;\nvar _c;\n$RefreshReg$(_c, \"DragDrop\");","map":{"version":3,"names":["React","useState","useRef","useCallback","Note","useDrop","notesList","columnsList","Column","DragDrop","cards","setCards","columns","setColumns","moveImage","dragIndex","hoverIndex","prevcards","newItems","filter","_","idx","splice","console","log","addImageTocards","id","pictureList","picture","map","column","columnName","toUpperCase","index","url"],"sources":["/Users/cgiaramani/AEM-projects/to-do-mine/src/components/Panel.js"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport Note from './Note';\nimport { useDrop } from 'react-dnd';\nimport { notesList, columnsList } from '../data/panel-data';\nimport Column from './Column';\n\n\n\nfunction DragDrop() {\n\n    const [cards, setCards] = useState(notesList); // declare the final destination/notes here\n    const [columns, setColumns] = useState(columnsList);\n\n    const moveImage = (dragIndex, hoverIndex) => {\n        setCards((prevcards) => {\n             const newItems = prevcards.filter((_, idx) => idx !== dragIndex);\n            newItems.splice(hoverIndex, 0, cards[dragIndex]);\n            console.log(\"moveImage: \" + dragIndex, hoverIndex, newItems);\n            return  [ ...newItems ];\n        });\n    };\n\n    const addImageTocards = (id) => {\n        console.log(\"Dragging is over\"); // printed when isOver is true\n        const pictureList = notesList.filter((picture) => id === picture.id); // find the dragged image\n        // notesList = notesList.filter((picture) => id !== picture.id);\n        setCards((cards) => [...cards, pictureList[0]]); // add to the cards\n    }\n\n    return (\n        <>\n            {/* <div className='Pictures' > \n    {PicturesList.map((picture) => {\n        return <Picture key={picture.id} id={picture.id} url={picture.url}/>;\n    })} </div> */}\n    {/* ref={drop} */}\n            <div className='cards'>\n                {/*  onDrop={onDrop} */}\n                {/* , color: isOver  */}\n                {/* {console.log(cards)} */}\n                {columns.map((column) => {\n                    return (\n                        <div key={column.columnName} className={\"column-wrapper\"}>\n                            <h3 className='columnName'>{column.columnName.toUpperCase()}</h3>\n                            <Column></Column>\n                        </div>\n                    )\n                })}\n                {cards.map((picture, index) => {\n                    return <Picture \n                    key={picture.id} \n                    id={picture.id} \n                    url={picture.url} \n                    index={index}\n                    moveImage = {moveImage}\n                    // ref={ref}\n                    />;\n                })}\n            </div>\n        </>\n    )\n}\n\nexport default DragDrop;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AAC5D,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,SAAS,EAAEC,WAAW,QAAQ,oBAAoB;AAC3D,OAAOC,MAAM,MAAM,UAAU;AAAC;AAAA;AAI9B,SAASC,QAAQ,GAAG;EAAA;EAEhB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAACK,SAAS,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAACM,WAAW,CAAC;EAEnD,MAAMO,SAAS,GAAG,CAACC,SAAS,EAAEC,UAAU,KAAK;IACzCL,QAAQ,CAAEM,SAAS,IAAK;MACnB,MAAMC,QAAQ,GAAGD,SAAS,CAACE,MAAM,CAAC,CAACC,CAAC,EAAEC,GAAG,KAAKA,GAAG,KAAKN,SAAS,CAAC;MACjEG,QAAQ,CAACI,MAAM,CAACN,UAAU,EAAE,CAAC,EAAEN,KAAK,CAACK,SAAS,CAAC,CAAC;MAChDQ,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGT,SAAS,EAAEC,UAAU,EAAEE,QAAQ,CAAC;MAC5D,OAAQ,CAAE,GAAGA,QAAQ,CAAE;IAC3B,CAAC,CAAC;EACN,CAAC;EAED,MAAMO,eAAe,GAAIC,EAAE,IAAK;IAC5BH,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC;IACjC,MAAMG,WAAW,GAAGrB,SAAS,CAACa,MAAM,CAAES,OAAO,IAAKF,EAAE,KAAKE,OAAO,CAACF,EAAE,CAAC,CAAC,CAAC;IACtE;IACAf,QAAQ,CAAED,KAAK,IAAK,CAAC,GAAGA,KAAK,EAAEiB,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACrD,CAAC;;EAED,oBACI;IAAA,uBAMI;MAAK,SAAS,EAAC,OAAO;MAAA,WAIjBf,OAAO,CAACiB,GAAG,CAAEC,MAAM,IAAK;QACrB,oBACI;UAA6B,SAAS,EAAE,gBAAiB;UAAA,wBACrD;YAAI,SAAS,EAAC,YAAY;YAAA,UAAEA,MAAM,CAACC,UAAU,CAACC,WAAW;UAAE;YAAA;YAAA;YAAA;UAAA,QAAM,eACjE,QAAC,MAAM;YAAA;YAAA;YAAA;UAAA,QAAU;QAAA,GAFXF,MAAM,CAACC,UAAU;UAAA;UAAA;UAAA;QAAA,QAGrB;MAEd,CAAC,CAAC,EACDrB,KAAK,CAACmB,GAAG,CAAC,CAACD,OAAO,EAAEK,KAAK,KAAK;QAC3B,oBAAO,QAAC,OAAO;UAEf,EAAE,EAAEL,OAAO,CAACF,EAAG;UACf,GAAG,EAAEE,OAAO,CAACM,GAAI;UACjB,KAAK,EAAED,KAAM;UACb,SAAS,EAAInB;UACb;QAAA,GALKc,OAAO,CAACF,EAAE;UAAA;UAAA;UAAA;QAAA,QAMb;MACN,CAAC,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA;EACA,iBACP;AAEX;AAAC,GArDQjB,QAAQ;AAAA,KAARA,QAAQ;AAuDjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}