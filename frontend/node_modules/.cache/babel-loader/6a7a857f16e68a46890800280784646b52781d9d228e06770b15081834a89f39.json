{"ast":null,"code":"var _jsxFileName = \"/Users/cgiaramani/AEM-projects/to-do-mine/src/components/Panel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from 'react';\nimport Note from './Note';\nimport { useDrop } from 'react-dnd';\nimport { notesList, columnsList } from '../data/panel-data';\nimport Column from './Column';\nimport classes from './Panel.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DragDrop() {\n  _s();\n  const [cards, setCards] = useState(notesList); // declare the final destination/notes here\n  const [columns, setColumns] = useState(columnsList);\n  const moveImage = (dragIndex, hoverIndex) => {\n    setCards(prevcards => {\n      const newItems = prevcards.filter((_, idx) => idx !== dragIndex);\n      newItems.splice(hoverIndex, 0, cards[dragIndex]);\n      console.log(\"moveImage: \" + dragIndex, hoverIndex, newItems);\n      return [...newItems];\n    });\n  };\n  const onDrop = (item, columnName) => {\n    const mapping = columns.find(col => col.columnName === columnName);\n    setCards(prevCards => {\n      // const newCard = prevCards.filter(i=> i.id === item.id)\n      // newCard.columnName = columnName;\n      // console.log(\"new carsd:\" + newCard);\n      // return [...prevCards, newCard];\n      const newItems = prevCards.filter(i => i.id !== item.id).concat({\n        ...item,\n        columnName,\n        icon: mapping.icon\n      });\n      console.log(\"newItems \" + newItems);\n      return [...newItems];\n    });\n  };\n  const addImageTocards = id => {\n    console.log(\"Dragging is over\"); // printed when isOver is true\n    const pictureList = notesList.filter(picture => id === picture.id); // find the dragged image\n    // notesList = notesList.filter((picture) => id !== picture.id);\n    setCards(cards => [...cards, pictureList[0]]); // add to the cards\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.cards}`,\n        children: columns.map(column => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.columnWrapper,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"column-title\",\n              children: column.columnName.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Column, {\n              columnName: column.columnName,\n              onDrop: onDrop,\n              children: [console.log(cards), cards.filter((item, index) => column.columnName === item.columnName).map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(Note, {\n                  item: item,\n                  index: index,\n                  moveImage: moveImage\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 52\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this)]\n          }, column.columnName, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(DragDrop, \"B2PKZCUYMuLcwM3lWgW0rn38xMs=\");\n_c = DragDrop;\nexport default DragDrop;\nvar _c;\n$RefreshReg$(_c, \"DragDrop\");","map":{"version":3,"names":["React","useState","useRef","useCallback","Note","useDrop","notesList","columnsList","Column","classes","DragDrop","cards","setCards","columns","setColumns","moveImage","dragIndex","hoverIndex","prevcards","newItems","filter","_","idx","splice","console","log","onDrop","item","columnName","mapping","find","col","prevCards","i","id","concat","icon","addImageTocards","pictureList","picture","map","column","columnWrapper","toUpperCase","index"],"sources":["/Users/cgiaramani/AEM-projects/to-do-mine/src/components/Panel.js"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport Note from './Note';\nimport { useDrop } from 'react-dnd';\nimport { notesList, columnsList } from '../data/panel-data';\nimport Column from './Column';\nimport classes from './Panel.module.css';\n\n\n\n\nfunction DragDrop() {\n\n    const [cards, setCards] = useState(notesList); // declare the final destination/notes here\n    const [columns, setColumns] = useState(columnsList);\n\n    const moveImage = (dragIndex, hoverIndex) => {\n        setCards((prevcards) => {\n            const newItems = prevcards.filter((_, idx) => idx !== dragIndex);\n            newItems.splice(hoverIndex, 0, cards[dragIndex]);\n            console.log(\"moveImage: \" + dragIndex, hoverIndex, newItems);\n            return [...newItems];\n        });\n    };\n\n    const onDrop = (item, columnName) => {\n        const mapping = columns.find(col => col.columnName === columnName);\n        setCards(prevCards => {\n            // const newCard = prevCards.filter(i=> i.id === item.id)\n            // newCard.columnName = columnName;\n            // console.log(\"new carsd:\" + newCard);\n            // return [...prevCards, newCard];\n            const newItems = prevCards\n                .filter(i => i.id !== item.id)\n                .concat({ ...item, columnName, icon: mapping.icon });\n            console.log(\"newItems \" + newItems);\n            return [...newItems];\n        })\n    }\n\n    const addImageTocards = (id) => {\n        console.log(\"Dragging is over\"); // printed when isOver is true\n        const pictureList = notesList.filter((picture) => id === picture.id); // find the dragged image\n        // notesList = notesList.filter((picture) => id !== picture.id);\n        setCards((cards) => [...cards, pictureList[0]]); // add to the cards\n    }\n\n    return (\n        <>\n            {/* <div className='Pictures' > \n    {PicturesList.map((picture) => {\n        return <Picture key={picture.id} id={picture.id} url={picture.url}/>;\n    })} </div> */}\n            {/* ref={drop} */}\n            <div className=\"container\">\n                <div className={`${classes.cards}`}>\n                    {/*  onDrop={onDrop} */}\n                    {/* , color: isOver  */}\n                    {/* {console.log(cards)} */}\n                    {columns.map((column) => {\n                        return (\n                            <div key={column.columnName} className={classes.columnWrapper}>\n                                <h3 className='column-title'>{column.columnName.toUpperCase()}</h3>\n                                <Column columnName={column.columnName} onDrop={onDrop}>\n                                    {console.log(cards)}\n                                    {cards\n                                        .filter((item, index) => column.columnName === item.columnName)\n                                        .map((item, index) => {\n                                            return <Note\n                                                key={item.id}\n                                                item={item}\n                                                index={index}\n                                                moveImage={moveImage}\n                                            />;\n                                        })\n                                    }\n                                </Column>\n                            </div>\n                        )\n                    })}\n                    {/* {cards.map((picture, index) => {\n                    return <Note\n                        key={picture.id}\n                        id={picture.id}\n                        url={picture.url}\n                        index={index}\n                        moveImage={moveImage}\n                    // ref={ref}\n                    />;\n                })} */}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default DragDrop;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}