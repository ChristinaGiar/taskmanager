{"ast":null,"code":"var _jsxFileName = \"/Users/cgiaramani/AEM-projects/to-do-mine/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useRef, useEffect } from \"react\";\nimport Task from \"./Task\";\nimport DropWrapper from \"./DropWrapper\";\nimport AddTask from \"./AddTask\";\nimport AddColumn from \"./AddColumn\";\nimport ScrollButtons from \"./ScrollButtons\";\nimport { data, statuses } from \"../data/index\";\nimport update from 'immutability-helper';\nimport classes from \"./Dashboard.module.css\";\nimport AuthContext from \"../store/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  // let count = 0;\n  const [items, setItems] = useState(data);\n  const [columnItems, setColumnItems] = useState(statuses);\n  const [counter, setCounter] = useState({\n    dataCounter: data.length + 1,\n    simpleCounter: 1\n  });\n  const itemsRef = useRef([]);\n  const crx = useContext(AuthContext);\n  useEffect(() => {\n    itemsRef.current = itemsRef.current.slice(0, columnItems.length);\n    // for (let index = 0; index < columnItems.length; index++) {\n    //     console.log(itemsRef.current[index].offsetLeft);\n    // }\n  }, [columnItems]);\n  const onDrop = (item, monitor, status) => {\n    const mapping = columnItems.find(si => si.status === status);\n    // crx.dropHandler(mapping.icon);\n    setItems(prevState => {\n      const newItems = prevState.filter(i => i.id !== item.id).concat({\n        ...item,\n        status,\n        icon: mapping.icon\n      });\n      return [...newItems];\n    });\n  };\n  const moveItem = (dragIndex, hoverIndex, statusTitle) => {\n    // crx.moveHandler(dragIndex, hoverIndex);\n    let item = items[dragIndex];\n    // setItems((prevCards) =>\n    //     update(prevCards, {\n    //         $splice: [\n    //             [dragIndex, 1],\n    //             [hoverIndex, 0, prevCards[dragIndex]],\n    //         ],\n    //     }),\n    // )\n    setItems(prevState => {\n      let lastColumnItem = items.findLast(i => i.status === statusTitle);\n      const newItems = prevState.filter((i, idx) => idx !== dragIndex);\n      let lastColumnItemIndex = newItems.indexOf(lastColumnItem);\n      newItems.splice(lastColumnItemIndex + 1, 0, item);\n\n      // const newItems = prevState.filter((i, idx) => idx !== dragIndex);\n      // // prevState.splice(dragIndex, 1)\n      // newItems.splice(hoverIndex, 0, item);\n      // console.log(prevState);\n\n      return [...newItems];\n    });\n  };\n  const addItem = status => {\n    // crx.addTaskHandler(status, counter.dataCounter, columnItems);\n    setItems(prevState => {\n      // console.log(data.length, counter.dataCounter);\n      const column = columnItems.find(column => column.status === status);\n      prevState.splice(prevState.length, 0, {\n        id: counter.dataCounter,\n        icon: column.icon,\n        status: column.status,\n        title: \"Task Title\",\n        content: \"Task Description\"\n      });\n      return [...prevState];\n    });\n    setCounter(prevCounter => ({\n      ...prevCounter,\n      dataCounter: prevCounter.dataCounter + 1\n    }));\n  };\n  const deleteTask = id => {\n    // crx.deleteTaskHandler(id);\n    setItems(prevState => {\n      const newItems = prevState.filter(item => item.id !== id);\n      return [...newItems];\n    });\n  };\n  const addColumn = () => {\n    // count++\n    setCounter(prevCounter => ({\n      ...prevCounter,\n      simpleCounter: prevCounter.simpleCounter + 1\n    }));\n    setColumnItems(prevColumns => [...prevColumns, {\n      statusId: statuses.length + counter.simpleCounter,\n      status: `New Column ${counter.simpleCounter}`,\n      icon: \"ðŸŽ‰\"\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `row ${classes.box}`,\n      children: [columnItems.map((s, sIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `col-6 col-sm-4 col-md-3`,\n        ref: el => itemsRef.current[sIndex] = el,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.columnWrapper,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: classes.columnHeader,\n            children: s.status.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(DropWrapper, {\n            onDrop: onDrop,\n            status: s.status,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [console.log(items), items.filter(i => i.status === s.status).map((i, idx, array) => {\n                return /*#__PURE__*/_jsxDEV(Task, {\n                  task: i,\n                  index: idx,\n                  moveItem: moveItem,\n                  status: s,\n                  deleteTask: deleteTask\n                }, i.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 52\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n            items: items,\n            status: s.status,\n            addItem: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this)\n      }, s.status, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(AddColumn, {\n        addColumn: addColumn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ScrollButtons, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"AxJ4rRodAvc3F/Hg2Cm3EQAotWI=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useContext","useState","useRef","useEffect","Task","DropWrapper","AddTask","AddColumn","ScrollButtons","data","statuses","update","classes","AuthContext","Dashboard","items","setItems","columnItems","setColumnItems","counter","setCounter","dataCounter","length","simpleCounter","itemsRef","crx","current","slice","onDrop","item","monitor","status","mapping","find","si","prevState","newItems","filter","i","id","concat","icon","moveItem","dragIndex","hoverIndex","statusTitle","lastColumnItem","findLast","idx","lastColumnItemIndex","indexOf","splice","addItem","column","title","content","prevCounter","deleteTask","addColumn","prevColumns","statusId","box","map","s","sIndex","el","columnWrapper","columnHeader","toUpperCase","console","log","array"],"sources":["/Users/cgiaramani/AEM-projects/to-do-mine/src/components/Dashboard.js"],"sourcesContent":["import React, { useContext, useState, useRef, useEffect } from \"react\";\nimport Task from \"./Task\";\nimport DropWrapper from \"./DropWrapper\";\nimport AddTask from \"./AddTask\";\nimport AddColumn from \"./AddColumn\";\nimport ScrollButtons from \"./ScrollButtons\";\nimport { data, statuses } from \"../data/index\";\nimport update from 'immutability-helper'\n\n\nimport classes from \"./Dashboard.module.css\";\nimport AuthContext from \"../store/auth-context\";\n\nconst Dashboard = () => {\n    // let count = 0;\n    const [items, setItems] = useState(data);\n    const [columnItems, setColumnItems] = useState(statuses);\n    const [counter, setCounter] = useState({ dataCounter: data.length + 1, simpleCounter: 1 });\n    const itemsRef = useRef([]);\n\n    const crx = useContext(AuthContext);\n\n    useEffect(() => {\n        itemsRef.current = itemsRef.current.slice(0, columnItems.length);\n        // for (let index = 0; index < columnItems.length; index++) {\n        //     console.log(itemsRef.current[index].offsetLeft);\n        // }\n\n    }, [columnItems]);\n\n    const onDrop = (item, monitor, status) => {\n        const mapping = columnItems.find(si => si.status === status);\n        // crx.dropHandler(mapping.icon);\n        setItems(prevState => {\n            const newItems = prevState\n                .filter(i => i.id !== item.id)\n                .concat({ ...item, status, icon: mapping.icon });\n            return [...newItems];\n        });\n    };\n\n    const moveItem = (dragIndex, hoverIndex, statusTitle) => {\n        // crx.moveHandler(dragIndex, hoverIndex);\n        let item = items[dragIndex];\n        // setItems((prevCards) =>\n        //     update(prevCards, {\n        //         $splice: [\n        //             [dragIndex, 1],\n        //             [hoverIndex, 0, prevCards[dragIndex]],\n        //         ],\n        //     }),\n        // )\n        setItems(prevState => {\n            let lastColumnItem = items.findLast(i => i.status === statusTitle)\n            const newItems = prevState.filter((i, idx) => idx !== dragIndex);\n            let lastColumnItemIndex = newItems.indexOf(lastColumnItem);\n            newItems.splice(lastColumnItemIndex+1, 0, item);\n\n            // const newItems = prevState.filter((i, idx) => idx !== dragIndex);\n            // // prevState.splice(dragIndex, 1)\n            // newItems.splice(hoverIndex, 0, item);\n            // console.log(prevState);\n\n            return [...newItems];\n        });\n    };\n    const addItem = (status) => {\n        // crx.addTaskHandler(status, counter.dataCounter, columnItems);\n        setItems(prevState => {\n            // console.log(data.length, counter.dataCounter);\n            const column = columnItems.find(column => column.status === status)\n            prevState.splice(prevState.length, 0, {\n                id: counter.dataCounter,\n                icon: column.icon,\n                status: column.status,\n                title: \"Task Title\",\n                content: \"Task Description\"\n            });\n            return [...prevState];\n        })\n        setCounter(prevCounter => ({ ...prevCounter, dataCounter: prevCounter.dataCounter + 1 }));\n    }\n\n    const deleteTask = (id) => {\n        // crx.deleteTaskHandler(id);\n        setItems(prevState => {\n            const newItems = prevState.filter(item => item.id !== id);\n            return [...newItems];\n\n        })\n    }\n    const addColumn = () => {\n        // count++\n        setCounter(prevCounter => ({ ...prevCounter, simpleCounter: prevCounter.simpleCounter + 1 }));\n\n        setColumnItems(prevColumns => ([...prevColumns, {\n            statusId: statuses.length + counter.simpleCounter,\n            status: `New Column ${counter.simpleCounter}`,\n            icon: \"ðŸŽ‰\",\n        }]));\n    }\n\n    return (\n        <div className={\"container\"}>\n            <div className={`row ${classes.box}`}>\n                {/* {console.log(columnItems)} */}\n                {columnItems.map((s, sIndex) => (\n                    <div key={s.status} className={`col-6 col-sm-4 col-md-3`} ref={el => itemsRef.current[sIndex] = el}>\n                        <div className={classes.columnWrapper}>\n                            <h2 className={classes.columnHeader}>{s.status.toUpperCase()}</h2>\n                            <DropWrapper onDrop={onDrop} status={s.status}>\n                                {/* get the status when onDrop exec */}\n                                <div>\n                                    {console.log(items)}\n                                    {items\n                                        .filter(i => i.status === s.status)\n                                        .map((i, idx, array) => {\n                                            return <Task key={i.id} task={i} index={idx} moveItem={moveItem} status={s} deleteTask={deleteTask} />\n                                        })\n                                    }\n                                </div>\n                            </DropWrapper>\n                            {/* {console.log(\"RUN\")} */}\n                            <AddTask items={items} status={s.status} addItem={addItem}></AddTask>\n                        </div>\n                    </div>\n                ))}\n                <AddColumn addColumn={addColumn} />\n                <ScrollButtons />\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}