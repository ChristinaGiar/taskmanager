{"ast":null,"code":"var _jsxFileName = \"/Users/cgiaramani/AEM-projects/to-do-mine/src/components/Note.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Note(_ref) {\n  _s();\n  let {\n    item,\n    index,\n    moveImage\n  } = _ref;\n  const ref = useRef(null);\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: \"card\",\n    // tpe of draggable item\n    item: {\n      ...item\n    },\n    // pass parametres accessible from board\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  }));\n  const [{\n    handlerId\n  }, drop] = useDrop({\n    accept: \"card\",\n    collect(monitor) {\n      return {\n        handlerId: monitor.getHandlerId()\n      };\n    },\n    hover(item, monitor) {\n      var _ref$current;\n      /// hovered item underneath\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      console.log(dragIndex, hoverIndex);\n\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      // Determine rectangle on screen\n      const hoverBoundingRect = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.getBoundingClientRect();\n\n      // Get vertical middle\n      const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset();\n\n      // Get pixels to the top\n      const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n\n      // Time to actually perform the action\n      moveImage(dragIndex, hoverIndex);\n\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex;\n    }\n  });\n\n  // <SinglePicture drag={drag} url={url} isDragging={isDragging}/>\n  drag(drop(ref));\n  const opacity = isDragging ? 0 : 1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref // declare draggable item in order to track its position\n    ,\n    height: \"100px\",\n    alt: \"here\",\n    \"data-handler-id\": handlerId,\n    style: {\n      opacity,\n      margin: \"10px 20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: item.color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item.icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 3\n  }, this);\n}\n_s(Note, \"3C8kwZ2GhyXxEidFeZmgdcYRGD0=\", false, function () {\n  return [useDrag, useDrop];\n});\n_c = Note;\nexport default Note;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["React","useRef","useDrag","useDrop","Note","item","index","moveImage","ref","isDragging","drag","type","collect","monitor","handlerId","drop","accept","getHandlerId","hover","current","dragIndex","hoverIndex","console","log","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","clientOffset","getClientOffset","hoverClientY","y","opacity","margin","color","content","icon"],"sources":["/Users/cgiaramani/AEM-projects/to-do-mine/src/components/Note.js"],"sourcesContent":["import React, {useRef} from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\n\n\nfunction Note({ item, index, moveImage }) {\n    const ref = useRef(null);\n\n    const [{ isDragging }, drag] = useDrag(() => ({\n        type: \"card\", // tpe of draggable item\n        item: { ...item }, // pass parametres accessible from board\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        })\n    }))\n    const [{ handlerId }, drop] = useDrop({\n\t\taccept: \"card\",\n\t\tcollect(monitor) {\n\t\t\treturn {\n\t\t\t\thandlerId: monitor.getHandlerId(),\n\t\t\t}\n\t\t},\n\t\thover(item, monitor) { /// hovered item underneath\n\t\t\tif (!ref.current) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tconst dragIndex = item.index\n\t\t\tconst hoverIndex = index;\n\t\t\tconsole.log(dragIndex, hoverIndex);\n\n\n\t\t\t// Don't replace items with themselves\n\t\t\tif (dragIndex === hoverIndex) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// Determine rectangle on screen\n\t\t\tconst hoverBoundingRect = ref.current?.getBoundingClientRect()\n\n\t\t\t// Get vertical middle\n\t\t\tconst hoverMiddleY =\n\t\t\t\t(hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\n\n\t\t\t// Determine mouse position\n\t\t\tconst clientOffset = monitor.getClientOffset()\n\n\t\t\t// Get pixels to the top\n\t\t\tconst hoverClientY = clientOffset.y - hoverBoundingRect.top\n\n\t\t\t// Only perform the move when the mouse has crossed half of the items height\n\t\t\t// When dragging downwards, only move when the cursor is below 50%\n\t\t\t// When dragging upwards, only move when the cursor is above 50%\n\n\t\t\t// Dragging downwards\n\t\t\tif (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// Dragging upwards\n\t\t\tif (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// Time to actually perform the action\n\t\t\tmoveImage(dragIndex, hoverIndex)\n\n\t\t\t// Note: we're mutating the monitor item here!\n\t\t\t// Generally it's better to avoid mutations,\n\t\t\t// but it's good here for the sake of performance\n\t\t\t// to avoid expensive index searches.\n\t\t\titem.index = hoverIndex\n\t\t},\n\t})\n\n    // <SinglePicture drag={drag} url={url} isDragging={isDragging}/>\n    drag(drop(ref))\n\tconst opacity = isDragging ? 0 : 1;\n    return (\n\t\t<div\n\t\t\tref={ref} // declare draggable item in order to track its position\n\t\t\t height=\"100px\" alt=\"here\"\n\t\t\tdata-handler-id={handlerId}\n\t\t\tstyle={{ opacity, margin: \"10px 20px\"}}>\n\t\t\t\t<p>{item.color}</p>\n\t\t\t\t<p>{item.content}</p>\n\t\t\t\t<p>{item.icon}</p>\n\t\t\t</div>\n\n\t)\n}\n\nexport default Note"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}