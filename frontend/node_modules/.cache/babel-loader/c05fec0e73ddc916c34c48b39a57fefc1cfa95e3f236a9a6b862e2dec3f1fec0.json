{"ast":null,"code":"var _jsxFileName = \"/Users/cgiaramani/AEM-projects/to-do-mine/src/components/Task.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport Modal from './Modal';\nimport classes from './Task.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Task = _ref => {\n  _s();\n  let {\n    task,\n    index,\n    moveItem,\n    status,\n    deleteTask,\n    colXPosition\n  } = _ref;\n  const ref = useRef(null);\n  const [, drop] = useDrop({\n    accept: \"task\",\n    hover(task1, monitor) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = task1.index;\n      const hoverIndex = index;\n      console.log(dragIndex, hoverIndex);\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n      const hoveredRect = ref.current.getBoundingClientRect();\n      const hoverMiddleY = (hoveredRect.bottom - hoveredRect.top) / 2;\n      const mousePosition = monitor.getClientOffset();\n      const hoverClientY = mousePosition.y - hoveredRect.top;\n\n      // console.log(\"mousePosition: \", mousePosition.x);\n      for (let index = 0; index < colXPosition.length; index++) {\n        console.log(colXPosition[index].offsetLeft);\n      }\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n      moveItem(dragIndex, hoverIndex);\n      task1.index = hoverIndex;\n    }\n  });\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: \"task\",\n    item: {\n      type: \"task\",\n      ...task,\n      index\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const [taskClicked, setTaskClicked] = useState(false);\n  const toggleModal = () => {\n    setTaskClicked(prevState => !prevState);\n  };\n  const deleteTaskHandler = e => {\n    e.stopPropagation();\n    deleteTask(task.id);\n    console.log(\"DELETE\");\n  };\n  drag(drop(ref));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      className: `${isDragging ? classes.dashed : \"\"}`,\n      onClick: toggleModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.task,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: `fa-solid fa-trash-can ${classes.taskTrash}`,\n          onClick: deleteTaskHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.taskStatusWrapper,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.taskStatus,\n            children: task.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.taskTitle,\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), taskClicked && /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(Modal, {\n      icon: task.icon,\n      title: task.title,\n      content: task.content,\n      onClose: toggleModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }, this), document.getElementById('overlay-root'))]\n  }, void 0, true);\n};\n_s(Task, \"EHiSAkWuwOn6yTeZf8ipNoJaFNs=\", false, function () {\n  return [useDrop, useDrag];\n});\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","useRef","ReactDOM","useDrag","useDrop","Modal","classes","Task","task","index","moveItem","status","deleteTask","colXPosition","ref","drop","accept","hover","task1","monitor","current","dragIndex","hoverIndex","console","log","hoveredRect","getBoundingClientRect","hoverMiddleY","bottom","top","mousePosition","getClientOffset","hoverClientY","y","length","offsetLeft","isDragging","drag","type","item","collect","taskClicked","setTaskClicked","toggleModal","prevState","deleteTaskHandler","e","stopPropagation","id","dashed","taskTrash","taskStatusWrapper","taskStatus","icon","taskTitle","title","createPortal","content","document","getElementById"],"sources":["/Users/cgiaramani/AEM-projects/to-do-mine/src/components/Task.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport Modal from './Modal';\n\nimport classes from './Task.module.css';\n\nconst Task = ({ task, index, moveItem, status, deleteTask, colXPosition }) => {\n    const ref = useRef(null);\n\n    const [, drop] = useDrop({\n        accept: \"task\",\n        hover(task1, monitor) {\n            if (!ref.current) {\n                return\n            }\n            const dragIndex = task1.index;\n            const hoverIndex = index;\n            console.log(dragIndex, hoverIndex);\n\n            if (dragIndex === hoverIndex) {\n                return\n            }\n\n            const hoveredRect = ref.current.getBoundingClientRect();\n            const hoverMiddleY = (hoveredRect.bottom - hoveredRect.top) / 2;\n            const mousePosition = monitor.getClientOffset();\n            const hoverClientY = mousePosition.y - hoveredRect.top;\n\n            // console.log(\"mousePosition: \", mousePosition.x);\n            for (let index = 0; index < colXPosition.length; index++) {\n                console.log(colXPosition[index].offsetLeft);\n            }\n\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n                return;\n            }\n\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n                return;\n            }\n            moveItem(dragIndex, hoverIndex);\n            task1.index = hoverIndex;\n        },\n    });\n\n    const [{ isDragging }, drag] = useDrag({\n        type: \"task\",\n        item: { type: \"task\", ...task, index },\n        collect: monitor => ({\n            isDragging: monitor.isDragging()\n        })\n    });\n\n    const [taskClicked, setTaskClicked] = useState(false);\n\n    const toggleModal = () => {\n        setTaskClicked((prevState) => (!prevState))\n    }\n    \n    const deleteTaskHandler = (e) => {\n        e.stopPropagation();\n        deleteTask(task.id);\n        console.log(\"DELETE\");\n    }\n\n    drag(drop(ref));\n\n    return (\n        <>\n            <div\n                ref={ref}\n                className={`${isDragging ? classes.dashed : \"\"}`}\n                onClick={toggleModal}\n            >\n                <div className={classes.task} >\n                <i className={`fa-solid fa-trash-can ${classes.taskTrash}`} onClick={deleteTaskHandler}></i>\n                    <div className={classes.taskStatusWrapper}>\n                        <div className={classes.taskStatus}>{task.icon}</div>\n                    </div>\n                    <p className={classes.taskTitle}>{task.title}</p>\n                </div>\n            </div>\n            {taskClicked &&\n                ReactDOM.createPortal(\n                    <Modal\n                        icon={task.icon}\n                        title={task.title}\n                        content={task.content}\n                        onClose={toggleModal}\n                    />, document.getElementById('overlay-root')\n                )\n            }\n        </>\n    );\n};\n\nexport default Task;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,QAAQ,MAAM,WAAW;AAChC,SAASC,OAAO,EAAEC,OAAO,QAAQ,WAAW;AAC5C,OAAOC,KAAK,MAAM,SAAS;AAE3B,OAAOC,OAAO,MAAM,mBAAmB;AAAC;AAAA;AAExC,MAAMC,IAAI,GAAG,QAAiE;EAAA;EAAA,IAAhE;IAAEC,IAAI;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,MAAM;IAAEC,UAAU;IAAEC;EAAa,CAAC;EACrE,MAAMC,GAAG,GAAGb,MAAM,CAAC,IAAI,CAAC;EAExB,MAAM,GAAGc,IAAI,CAAC,GAAGX,OAAO,CAAC;IACrBY,MAAM,EAAE,MAAM;IACdC,KAAK,CAACC,KAAK,EAAEC,OAAO,EAAE;MAClB,IAAI,CAACL,GAAG,CAACM,OAAO,EAAE;QACd;MACJ;MACA,MAAMC,SAAS,GAAGH,KAAK,CAACT,KAAK;MAC7B,MAAMa,UAAU,GAAGb,KAAK;MACxBc,OAAO,CAACC,GAAG,CAACH,SAAS,EAAEC,UAAU,CAAC;MAElC,IAAID,SAAS,KAAKC,UAAU,EAAE;QAC1B;MACJ;MAEA,MAAMG,WAAW,GAAGX,GAAG,CAACM,OAAO,CAACM,qBAAqB,EAAE;MACvD,MAAMC,YAAY,GAAG,CAACF,WAAW,CAACG,MAAM,GAAGH,WAAW,CAACI,GAAG,IAAI,CAAC;MAC/D,MAAMC,aAAa,GAAGX,OAAO,CAACY,eAAe,EAAE;MAC/C,MAAMC,YAAY,GAAGF,aAAa,CAACG,CAAC,GAAGR,WAAW,CAACI,GAAG;;MAEtD;MACA,KAAK,IAAIpB,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGI,YAAY,CAACqB,MAAM,EAAEzB,KAAK,EAAE,EAAE;QACtDc,OAAO,CAACC,GAAG,CAACX,YAAY,CAACJ,KAAK,CAAC,CAAC0B,UAAU,CAAC;MAC/C;MAEA,IAAId,SAAS,GAAGC,UAAU,IAAIU,YAAY,GAAGL,YAAY,EAAE;QACvD;MACJ;MAEA,IAAIN,SAAS,GAAGC,UAAU,IAAIU,YAAY,GAAGL,YAAY,EAAE;QACvD;MACJ;MACAjB,QAAQ,CAACW,SAAS,EAAEC,UAAU,CAAC;MAC/BJ,KAAK,CAACT,KAAK,GAAGa,UAAU;IAC5B;EACJ,CAAC,CAAC;EAEF,MAAM,CAAC;IAAEc;EAAW,CAAC,EAAEC,IAAI,CAAC,GAAGlC,OAAO,CAAC;IACnCmC,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE;MAAED,IAAI,EAAE,MAAM;MAAE,GAAG9B,IAAI;MAAEC;IAAM,CAAC;IACtC+B,OAAO,EAAErB,OAAO,KAAK;MACjBiB,UAAU,EAAEjB,OAAO,CAACiB,UAAU;IAClC,CAAC;EACL,CAAC,CAAC;EAEF,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAM2C,WAAW,GAAG,MAAM;IACtBD,cAAc,CAAEE,SAAS,IAAM,CAACA,SAAU,CAAC;EAC/C,CAAC;EAED,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC7BA,CAAC,CAACC,eAAe,EAAE;IACnBnC,UAAU,CAACJ,IAAI,CAACwC,EAAE,CAAC;IACnBzB,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACzB,CAAC;EAEDa,IAAI,CAACtB,IAAI,CAACD,GAAG,CAAC,CAAC;EAEf,oBACI;IAAA,wBACI;MACI,GAAG,EAAEA,GAAI;MACT,SAAS,EAAG,GAAEsB,UAAU,GAAG9B,OAAO,CAAC2C,MAAM,GAAG,EAAG,EAAE;MACjD,OAAO,EAAEN,WAAY;MAAA,uBAErB;QAAK,SAAS,EAAErC,OAAO,CAACE,IAAK;QAAA,wBAC7B;UAAG,SAAS,EAAG,yBAAwBF,OAAO,CAAC4C,SAAU,EAAE;UAAC,OAAO,EAAEL;QAAkB;UAAA;UAAA;UAAA;QAAA,QAAK,eACxF;UAAK,SAAS,EAAEvC,OAAO,CAAC6C,iBAAkB;UAAA,uBACtC;YAAK,SAAS,EAAE7C,OAAO,CAAC8C,UAAW;YAAA,UAAE5C,IAAI,CAAC6C;UAAI;YAAA;YAAA;YAAA;UAAA;QAAO;UAAA;UAAA;UAAA;QAAA,QACnD,eACN;UAAG,SAAS,EAAE/C,OAAO,CAACgD,SAAU;UAAA,UAAE9C,IAAI,CAAC+C;QAAK;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA;IAC/C;MAAA;MAAA;MAAA;IAAA,QACJ,EACLd,WAAW,iBACRvC,QAAQ,CAACsD,YAAY,eACjB,QAAC,KAAK;MACF,IAAI,EAAEhD,IAAI,CAAC6C,IAAK;MAChB,KAAK,EAAE7C,IAAI,CAAC+C,KAAM;MAClB,OAAO,EAAE/C,IAAI,CAACiD,OAAQ;MACtB,OAAO,EAAEd;IAAY;MAAA;MAAA;MAAA;IAAA,QACvB,EAAEe,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAC9C;EAAA,gBAEN;AAEX,CAAC;AAAC,GAxFIpD,IAAI;EAAA,QAGWH,OAAO,EAoCOD,OAAO;AAAA;AAAA,KAvCpCI,IAAI;AA0FV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}