{"ast":null,"code":"var _jsxFileName = \"/Users/cgiaramani/AEM-projects/to-do-mine/src/components/BackgroundColor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport classes from \"./BackgroundColor.module.css\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { Container, Row, Col, Form, Input, Button, Navbar, Nav, NavbarBrand, NavLink, NavItem, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst colors = [\"#028090\", \"#fffff\", \"purple\", \"#101010\", \"darkmagenta\"];\nconst BackgroundColor = () => {\n  _s();\n  // const [bgColor, setBgColor] = useState(colors);\n  const [activeColor, setActiveColor] = useState(colors[0]);\n  const changeBgColorHandler = color => {\n    // if (color !== activeColor) {\n    setActiveColor(color);\n    // }\n  };\n\n  const [theme, setTheme] = useState(null);\n  const [dropdownOpen, setdropdownOpen] = useState(false);\n  const resetTheme = () => {\n    setTheme(null);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `text-capitalize h1 mb-4 w-100 text-center text-${theme ? theme.toLowerCase() : \"secondary\"}`,\n        children: `${theme || \"Default\"}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center p-5\",\n        children: /*#__PURE__*/_jsxDEV(Dropdown, {\n          isOpen: dropdownOpen,\n          toggle: () => setdropdownOpen(!dropdownOpen),\n          children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n            color: theme,\n            caret: true,\n            children: \"Dropdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n            children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n              onClick: () => setTheme(\"primary\"),\n              children: \"Primary Theme\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n              onClick: () => setTheme(\"danger\"),\n              children: \"Danger Theme\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n              onClick: () => setTheme(\"success\"),\n              children: \"Success Theme\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n              divider: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n              onClick: resetTheme,\n              children: \"Default Theme\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `body { background-color: ${activeColor}; }`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"selectedBg\",\n      defaultValue: `${activeColor}`,\n      children: colors.map((color, idx) => {\n        // {console.log(idx)}\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: color,\n          className: `${classes.colorBox} ${activeColor === color ? classes.active : \"\"} `,\n          style: {\n            backgroundColor: `${color}`\n          },\n          onClick: () => changeBgColorHandler(color),\n          children: \"L\"\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(BackgroundColor, \"BmDxks+5iEm1ayW8QiEOxUFvoq0=\");\n_c = BackgroundColor;\nexport default BackgroundColor;\nvar _c;\n$RefreshReg$(_c, \"BackgroundColor\");","map":{"version":3,"names":["React","useState","classes","Dropdown","Container","Row","Col","Form","Input","Button","Navbar","Nav","NavbarBrand","NavLink","NavItem","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","colors","BackgroundColor","activeColor","setActiveColor","changeBgColorHandler","color","theme","setTheme","dropdownOpen","setdropdownOpen","resetTheme","toLowerCase","map","idx","colorBox","active","backgroundColor"],"sources":["/Users/cgiaramani/AEM-projects/to-do-mine/src/components/BackgroundColor.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport classes from \"./BackgroundColor.module.css\"\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport {\n    Container, Row, Col, Form, Input, Button, Navbar, Nav,\n    NavbarBrand, NavLink, NavItem, UncontrolledDropdown,\n    DropdownToggle, DropdownMenu, DropdownItem\n  } from 'reactstrap';\n\nconst colors = [\"#028090\", \"#fffff\", \"purple\", \"#101010\", \"darkmagenta\"];\n\nconst BackgroundColor = () => {\n    // const [bgColor, setBgColor] = useState(colors);\n    const [activeColor, setActiveColor] = useState(colors[0]);\n\n    const changeBgColorHandler = (color) => {\n        // if (color !== activeColor) {\n        setActiveColor(color);\n        // }\n    }\n\n    const [theme, setTheme] = useState(null);\n  const [dropdownOpen, setdropdownOpen] = useState(false);\n  const resetTheme = () => {\n    setTheme(null);\n  };\n\n    return (\n        <>\n         <div className=\"mb-2\">\n      <div\n        className={`text-capitalize h1 mb-4 w-100 text-center text-${\n          theme ? theme.toLowerCase() : \"secondary\"\n        }`}\n      >\n        {`${theme || \"Default\"}`}\n      </div>\n      <div className=\"d-flex justify-content-center p-5\">\n        <Dropdown\n          isOpen={dropdownOpen}\n          toggle={() => setdropdownOpen(!dropdownOpen)}\n        >\n          <DropdownToggle color={theme} caret>\n            Dropdown\n          </DropdownToggle>\n          <DropdownMenu>\n            <DropdownItem onClick={() => setTheme(\"primary\")}>\n              Primary Theme\n            </DropdownItem>\n            <DropdownItem onClick={() => setTheme(\"danger\")}>\n              Danger Theme\n            </DropdownItem>\n            <DropdownItem onClick={() => setTheme(\"success\")}>\n              Success Theme\n            </DropdownItem>\n            <DropdownItem divider />\n            <DropdownItem onClick={resetTheme}>Default Theme</DropdownItem>\n          </DropdownMenu>\n        </Dropdown>\n      </div>\n    </div>\n            <style>{`body { background-color: ${activeColor}; }`}</style>\n            {/* window.getComputedStyle( document.body ).backgroundColor */}\n            <select name=\"selectedBg\" defaultValue={`${activeColor}`}>\n                {\n                    colors.map((color, idx) => {\n                        // {console.log(idx)}\n                        return (\n                            <option key={idx} value={color} className={`${classes.colorBox} ${(activeColor === color) ? classes.active : \"\"} `} style={{ backgroundColor: `${color}` }} onClick={() => changeBgColorHandler(color)}>L</option>\n                        )\n                    })}\n                {/* <option value=\"apple\">Apple</option>\n                <option value=\"banana\">Banana</option>\n                <option value=\"orange\">Orange</option> */}\n            </select>\n            {/* <Dropdown>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                    Dropdown Button\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                    <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown> */}\n            {/* <div className={classes.usedColor}></div>\n            <div className={classes.dropdown}> */}\n\n            {/* </div> */}\n        </>\n    );\n};\n\nexport default BackgroundColor;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}