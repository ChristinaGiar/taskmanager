{"ast":null,"code":"var _jsxFileName = \"/Users/cgiaramani/AEM-projects/to-do-mine/src/components/DropWrapper.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport ITEM_TYPE from \"../data/types\";\nimport { statuses } from \"../data\";\n\n// each outer column wrapper\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DropWrapper = _ref => {\n  _s();\n  let {\n    onDrop,\n    children,\n    status\n  } = _ref;\n  const [{\n    isOver\n  }, drop] = useDrop({\n    accept: ITEM_TYPE,\n    canDrop: (item, monitor) => {\n      const itemIndex = statuses.findIndex(si => si.status === item.status);\n      const statusIndex = statuses.findIndex(si => si.status === status);\n      return [itemIndex + 1, itemIndex - 1, itemIndex].includes(statusIndex); // check if the start & targeted column are next to each other\n    },\n\n    drop: (item, monitor) => {\n      onDrop(item, monitor, status);\n    },\n    collect: monitor => ({\n      isOver: monitor.isOver()\n    })\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    className: \"drop-wrapper\",\n    children: /*#__PURE__*/React.cloneElement(children, {\n      isOver\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(DropWrapper, \"9166pYLrZ/JzF75YDim8ZjfICTM=\", false, function () {\n  return [useDrop];\n});\n_c = DropWrapper;\nexport default DropWrapper;\nvar _c;\n$RefreshReg$(_c, \"DropWrapper\");","map":{"version":3,"names":["React","useDrop","ITEM_TYPE","statuses","DropWrapper","onDrop","children","status","isOver","drop","accept","canDrop","item","monitor","itemIndex","findIndex","si","statusIndex","includes","collect","cloneElement"],"sources":["/Users/cgiaramani/AEM-projects/to-do-mine/src/components/DropWrapper.js"],"sourcesContent":["import React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport ITEM_TYPE from \"../data/types\";\nimport { statuses } from \"../data\";\n\n\n// each outer column wrapper\nconst DropWrapper = ({ onDrop, children, status }) => {\n    const [{ isOver }, drop] = useDrop({\n        accept: ITEM_TYPE,\n        canDrop: (item, monitor) => {\n            const itemIndex = statuses.findIndex(si => si.status === item.status);\n            const statusIndex = statuses.findIndex(si => si.status === status);\n            return [itemIndex + 1, itemIndex - 1, itemIndex].includes(statusIndex);// check if the start & targeted column are next to each other\n        },\n        drop: (item, monitor) => {\n            onDrop(item, monitor, status);\n        },\n        collect: monitor => ({\n            isOver: monitor.isOver()\n        })\n    });\n\n    return (\n        <div ref={drop} className={\"drop-wrapper\"}>\n            {React.cloneElement(children, { isOver })}\n        </div>\n    )\n};\n\nexport default DropWrapper;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAOC,SAAS,MAAM,eAAe;AACrC,SAASC,QAAQ,QAAQ,SAAS;;AAGlC;AAAA;AACA,MAAMC,WAAW,GAAG,QAAkC;EAAA;EAAA,IAAjC;IAAEC,MAAM;IAAEC,QAAQ;IAAEC;EAAO,CAAC;EAC7C,MAAM,CAAC;IAAEC;EAAO,CAAC,EAAEC,IAAI,CAAC,GAAGR,OAAO,CAAC;IAC/BS,MAAM,EAAER,SAAS;IACjBS,OAAO,EAAE,CAACC,IAAI,EAAEC,OAAO,KAAK;MACxB,MAAMC,SAAS,GAAGX,QAAQ,CAACY,SAAS,CAACC,EAAE,IAAIA,EAAE,CAACT,MAAM,KAAKK,IAAI,CAACL,MAAM,CAAC;MACrE,MAAMU,WAAW,GAAGd,QAAQ,CAACY,SAAS,CAACC,EAAE,IAAIA,EAAE,CAACT,MAAM,KAAKA,MAAM,CAAC;MAClE,OAAO,CAACO,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAG,CAAC,EAAEA,SAAS,CAAC,CAACI,QAAQ,CAACD,WAAW,CAAC,CAAC;IAC3E,CAAC;;IACDR,IAAI,EAAE,CAACG,IAAI,EAAEC,OAAO,KAAK;MACrBR,MAAM,CAACO,IAAI,EAAEC,OAAO,EAAEN,MAAM,CAAC;IACjC,CAAC;IACDY,OAAO,EAAEN,OAAO,KAAK;MACjBL,MAAM,EAAEK,OAAO,CAACL,MAAM;IAC1B,CAAC;EACL,CAAC,CAAC;EAEF,oBACI;IAAK,GAAG,EAAEC,IAAK;IAAC,SAAS,EAAE,cAAe;IAAA,uBACrCT,KAAK,CAACoB,YAAY,CAACd,QAAQ,EAAE;MAAEE;IAAO,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACvC;AAEd,CAAC;AAAC,GArBIJ,WAAW;EAAA,QACcH,OAAO;AAAA;AAAA,KADhCG,WAAW;AAuBjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}