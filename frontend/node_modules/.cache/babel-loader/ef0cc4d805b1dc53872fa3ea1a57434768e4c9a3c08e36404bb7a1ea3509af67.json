{"ast":null,"code":"var _jsxFileName = \"/Users/cgiaramani/AEM-projects/to-do-mine/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Task from \"./Task\";\nimport DropWrapper from \"./DropWrapper\";\nimport AddTask from \"./AddTask\";\nimport AddColumn from \"./AddColumn\";\nimport { data, statuses } from \"../data/index\";\nimport classes from \"./Dashboard.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  // let count = 0;\n  const [items, setItems] = useState(data);\n  const [columnItems, setColumnItems] = useState(statuses);\n  const [counter, setCounter] = useState({\n    dataCounter: data.length + 1,\n    simpleCounter: 0\n  });\n  const onDrop = (item, monitor, status) => {\n    const mapping = columnItems.find(si => si.status === status);\n    setItems(prevState => {\n      const newItems = prevState.filter(i => i.id !== item.id).concat({\n        ...item,\n        status,\n        icon: mapping.icon\n      });\n      return [...newItems];\n    });\n  };\n  const moveItem = (dragIndex, hoverIndex) => {\n    const item = items[dragIndex];\n    setItems(prevState => {\n      const newItems = prevState.filter((i, idx) => idx !== dragIndex);\n      newItems.splice(hoverIndex, 0, item);\n      return [...newItems];\n    });\n  };\n  const addItem = status => {\n    setItems(prevState => {\n      // const lastStatusItemIndex = prevState.findIndex((item) => item.status === status);\n      console.log(data.length, counter.dataCounter);\n      const column = columnItems.find(column => column.status === status);\n      prevState.splice(prevState.length, 0, {\n        id: counter.dataCounter,\n        icon: column.icon,\n        status: column.status,\n        title: \"Task Title\",\n        content: \"Task Description\"\n      });\n      return [...prevState];\n    });\n    setCounter(prevCounter => ({\n      ...prevCounter,\n      dataCounter: prevCounter.dataCounter + 1\n    }));\n  };\n  const deleteTask = id => {\n    setItems(prevState => {\n      const newItems = prevState.filter(item => item.id !== id);\n      return [...newItems];\n    });\n  };\n  const addColumn = () => {\n    // count++\n    setCounter(prevCounter => ({\n      ...prevCounter,\n      simpleCounter: prevCounter.simpleCounter + 1\n    }));\n    setColumnItems(prevColumns => [...prevColumns, {\n      status: `New Column ${counter.simpleCounter}`,\n      icon: \"ðŸŽ‰\"\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ded\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `row ${classes.box}`,\n        children: [columnItems.map(s => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `col-12 col-sm-6 col-md-3`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.columnWrapper,\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: classes.columnHeader,\n              children: s.status.toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(DropWrapper, {\n              onDrop: onDrop,\n              status: s.status,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: items.filter(i => i.status === s.status).map((i, idx) => /*#__PURE__*/_jsxDEV(Task, {\n                  task: i,\n                  index: idx,\n                  moveItem: moveItem,\n                  status: s.status,\n                  deleteTask: deleteTask\n                }, i.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 54\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n              items: items,\n              status: s.status,\n              addItem: addItem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, s.status, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)), /*#__PURE__*/_jsxDEV(AddColumn, {\n          addColumn: addColumn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"qSJOTITXp5pX9WU/8yTdVnJic6c=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","Task","DropWrapper","AddTask","AddColumn","data","statuses","classes","Dashboard","items","setItems","columnItems","setColumnItems","counter","setCounter","dataCounter","length","simpleCounter","onDrop","item","monitor","status","mapping","find","si","prevState","newItems","filter","i","id","concat","icon","moveItem","dragIndex","hoverIndex","idx","splice","addItem","console","log","column","title","content","prevCounter","deleteTask","addColumn","prevColumns","box","map","s","columnWrapper","columnHeader","toUpperCase"],"sources":["/Users/cgiaramani/AEM-projects/to-do-mine/src/components/Dashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Task from \"./Task\";\nimport DropWrapper from \"./DropWrapper\";\nimport AddTask from \"./AddTask\";\nimport AddColumn from \"./AddColumn\";\nimport { data, statuses } from \"../data/index\";\n\nimport classes from \"./Dashboard.module.css\";\n\nconst Dashboard = () => {\n    // let count = 0;\n    const [items, setItems] = useState(data);\n    const [columnItems, setColumnItems] = useState(statuses);\n    const [counter, setCounter] = useState({dataCounter: data.length+1, simpleCounter: 0});\n\n\n    const onDrop = (item, monitor, status) => {\n        const mapping = columnItems.find(si => si.status === status);\n\n        setItems(prevState => {\n            const newItems = prevState\n                .filter(i => i.id !== item.id)\n                .concat({ ...item, status, icon: mapping.icon });\n            return [...newItems];\n        });\n    };\n\n    const moveItem = (dragIndex, hoverIndex) => {\n        const item = items[dragIndex];\n        setItems(prevState => {\n            const newItems = prevState.filter((i, idx) => idx !== dragIndex);\n            newItems.splice(hoverIndex, 0, item);\n            return [...newItems];\n        });\n    };\n    const addItem = (status) => {\n        setItems(prevState => {\n            // const lastStatusItemIndex = prevState.findIndex((item) => item.status === status);\n            console.log(data.length, counter.dataCounter);\n            const column = columnItems.find(column => column.status === status)\n            prevState.splice(prevState.length, 0, {\n                id: counter.dataCounter,\n                icon: column.icon,\n                status: column.status,\n                title: \"Task Title\",\n                content: \"Task Description\"\n            });\n            return [...prevState];\n        })\n        setCounter(prevCounter => ({ ...prevCounter, dataCounter: prevCounter.dataCounter + 1 }));\n    }\n\n    const deleteTask = (id) => {\n        setItems(prevState => {\n            const newItems = prevState.filter(item => item.id !== id);\n            return [...newItems];\n\n        })\n    }\n    const addColumn = () => {\n        // count++\n        setCounter(prevCounter => ({ ...prevCounter, simpleCounter: prevCounter.simpleCounter + 1 }));\n\n        setColumnItems(prevColumns => ([ ...prevColumns,  {\n            status: `New Column ${counter.simpleCounter}`,\n            icon: \"ðŸŽ‰\",\n        }]));\n    }\n\n    return (\n        <div className={\"container\"}>\n            <div className={\"ded\"}>\n            <div className={`row ${classes.box}`}>\n                {columnItems.map(s => (\n                    <div key={s.status} className={`col-12 col-sm-6 col-md-3`}>\n                        <div className={classes.columnWrapper}>\n                        <h2 className={classes.columnHeader}>{s.status.toUpperCase()}</h2>\n                        <DropWrapper onDrop={onDrop} status={s.status}>\n                            {/* get the status when onDrop exec */}\n                            <div>\n                                {items\n                                    .filter(i => i.status === s.status)\n                                    .map((i, idx) => <Task key={i.id} task={i} index={idx} moveItem={moveItem} status={s.status} deleteTask={deleteTask}/>)\n                                }\n                            </div>\n                        </DropWrapper>\n                        {/* {console.log(\"RUN\")} */}\n                        <AddTask items={items} status={s.status} addItem={addItem}></AddTask>\n                        </div>\n                    </div>\n                ))}\n                <AddColumn addColumn={addColumn} />\n            </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}