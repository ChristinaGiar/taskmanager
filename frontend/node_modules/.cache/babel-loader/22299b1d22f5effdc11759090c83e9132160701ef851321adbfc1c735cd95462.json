{"ast":null,"code":"var _jsxFileName = \"/Users/cgiaramani/AEM-projects/to-do-mine/src/components/BackgroundColor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport classes from \"./BackgroundColor.module.css\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst colors = [\"#028090\", \"#ffffff\", \"purple\", \"#101010\", \"darkmagenta\"];\nconst BackgroundColor = () => {\n  _s();\n  // const [bgColor, setBgColor] = useState(colors);\n  const [activeColor, setActiveColor] = useState(colors[0]);\n  const changeBgColorHandler = color => {\n    // if (color !== activeColor) {\n    setActiveColor(color);\n    // }\n  };\n\n  const [theme, setTheme] = useState(null);\n  const [dropdownOpen, setdropdownOpen] = useState(false);\n  const resetTheme = () => {\n    setTheme(null);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `body { background-color: ${activeColor}; }`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"color-dropdown\",\n      children: /*#__PURE__*/_jsxDEV(Dropdown, {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          id: \"color-dropdown\",\n          style: {\n            backgroundColor: `${activeColor}`\n          },\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-droplet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \" Change color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this), colors.map((color, idx) => {\n            // {console.log(idx)}\n            return /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              value: color,\n              className: `${classes.colorBox} ${activeColor === color ? classes.active : \"\"} `,\n              style: {\n                backgroundColor: `${color}`\n              },\n              onClick: () => changeBgColorHandler(color),\n              children: \"Action\"\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this)\n\n            // <option key={idx} value={color} className={`${classes.colorBox} ${(activeColor === color) ? classes.active : \"\"} `} style={{ backgroundColor: `${color}` }} onClick={() => changeBgColorHandler(color)}>L</option>\n            ;\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(BackgroundColor, \"BmDxks+5iEm1ayW8QiEOxUFvoq0=\");\n_c = BackgroundColor;\nexport default BackgroundColor;\nvar _c;\n$RefreshReg$(_c, \"BackgroundColor\");","map":{"version":3,"names":["React","useState","classes","Dropdown","colors","BackgroundColor","activeColor","setActiveColor","changeBgColorHandler","color","theme","setTheme","dropdownOpen","setdropdownOpen","resetTheme","backgroundColor","map","idx","colorBox","active"],"sources":["/Users/cgiaramani/AEM-projects/to-do-mine/src/components/BackgroundColor.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport classes from \"./BackgroundColor.module.css\"\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nconst colors = [\"#028090\", \"#ffffff\", \"purple\", \"#101010\", \"darkmagenta\"];\n\nconst BackgroundColor = () => {\n    // const [bgColor, setBgColor] = useState(colors);\n    const [activeColor, setActiveColor] = useState(colors[0]);\n\n    const changeBgColorHandler = (color) => {\n        // if (color !== activeColor) {\n        setActiveColor(color);\n        // }\n    }\n\n    const [theme, setTheme] = useState(null);\n    const [dropdownOpen, setdropdownOpen] = useState(false);\n    const resetTheme = () => {\n        setTheme(null);\n    };\n\n    return (\n        <>\n\n            <style>{`body { background-color: ${activeColor}; }`}</style>\n            {/* window.getComputedStyle( document.body ).backgroundColor */}\n            <div className=\"color-dropdown\">\n            <Dropdown>\n                <Dropdown.Toggle id=\"color-dropdown\" style={{ backgroundColor: `${activeColor}` }}>\n                    <i className=\"fa-solid fa-droplet\"></i>\n                </Dropdown.Toggle>\n                {/* <select name=\"selectedBg\" defaultValue={`${activeColor}`}> */}\n                <Dropdown.Menu>\n                    <div> Change color</div>\n                    {\n                        colors.map((color, idx) => {\n                            // {console.log(idx)}\n                            return (\n                                <Dropdown.Item key={idx} value={color} className={`${classes.colorBox} ${(activeColor === color) ? classes.active : \"\"} `} style={{ backgroundColor: `${color}` }} onClick={() => changeBgColorHandler(color)}>Action</Dropdown.Item>\n\n                                // <option key={idx} value={color} className={`${classes.colorBox} ${(activeColor === color) ? classes.active : \"\"} `} style={{ backgroundColor: `${color}` }} onClick={() => changeBgColorHandler(color)}>L</option>\n                            )\n                        })}\n                    {/* <option value=\"apple\">Apple</option>\n                <option value=\"banana\">Banana</option>\n                <option value=\"orange\">Orange</option> */}\n                </Dropdown.Menu>\n            </Dropdown>\n            </div>\n            {/* </select> */}\n            {/* <Dropdown>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                    Dropdown Button\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                    <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\n                </Dropdown.Menu>\n            </Dropdown> */}\n            {/* <div className={classes.usedColor}></div>\n            <div className={classes.dropdown}> */}\n\n            {/* </div> */}\n        </>\n    );\n};\n\nexport default BackgroundColor;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,8BAA8B;AAClD,OAAOC,QAAQ,MAAM,0BAA0B;AAAC;AAAA;AAEhD,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,aAAa,CAAC;AAEzE,MAAMC,eAAe,GAAG,MAAM;EAAA;EAC1B;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAACG,MAAM,CAAC,CAAC,CAAC,CAAC;EAEzD,MAAMI,oBAAoB,GAAIC,KAAK,IAAK;IACpC;IACAF,cAAc,CAACE,KAAK,CAAC;IACrB;EACJ,CAAC;;EAED,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMa,UAAU,GAAG,MAAM;IACrBH,QAAQ,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,oBACI;IAAA,wBAEI;MAAA,UAAS,4BAA2BL,WAAY;IAAI;MAAA;MAAA;MAAA;IAAA,QAAS,eAE7D;MAAK,SAAS,EAAC,gBAAgB;MAAA,uBAC/B,QAAC,QAAQ;QAAA,wBACL,QAAC,QAAQ,CAAC,MAAM;UAAC,EAAE,EAAC,gBAAgB;UAAC,KAAK,EAAE;YAAES,eAAe,EAAG,GAAET,WAAY;UAAE,CAAE;UAAA,uBAC9E;YAAG,SAAS,EAAC;UAAqB;YAAA;YAAA;YAAA;UAAA;QAAK;UAAA;UAAA;UAAA;QAAA,QACzB,eAElB,QAAC,QAAQ,CAAC,IAAI;UAAA,wBACV;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAwB,EAEpBF,MAAM,CAACY,GAAG,CAAC,CAACP,KAAK,EAAEQ,GAAG,KAAK;YACvB;YACA,oBACI,QAAC,QAAQ,CAAC,IAAI;cAAW,KAAK,EAAER,KAAM;cAAC,SAAS,EAAG,GAAEP,OAAO,CAACgB,QAAS,IAAIZ,WAAW,KAAKG,KAAK,GAAIP,OAAO,CAACiB,MAAM,GAAG,EAAG,GAAG;cAAC,KAAK,EAAE;gBAAEJ,eAAe,EAAG,GAAEN,KAAM;cAAE,CAAE;cAAC,OAAO,EAAE,MAAMD,oBAAoB,CAACC,KAAK,CAAE;cAAA;YAAA,GAA1LQ,GAAG;cAAA;cAAA;cAAA;YAAA;;YAEvB;YAAA;UAER,CAAC,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QAIM;MAAA;QAAA;QAAA;QAAA;MAAA;IACT;MAAA;MAAA;MAAA;IAAA,QACL;EAAA,gBAiBP;AAEX,CAAC;AAAC,GA9DIZ,eAAe;AAAA,KAAfA,eAAe;AAgErB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}