{"ast":null,"code":"import { redirect, useNavigate } from 'react-router-dom';\nexport function getTokenDuration() {\n  const storedExpirationDate = localStorage.getItem('token-duration');\n  const expirationDate = new Date(storedExpirationDate);\n  const currentDate = new Date();\n  const duration = expirationDate.getTime() - currentDate.getTime();\n  return duration;\n}\nexport function getAuthToken() {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    return null;\n  }\n  const tokenDuration = getTokenDuration();\n  if (tokenDuration < 0) {\n    return 'EXPIRED';\n  }\n  return token;\n}\nexport function tokenLoader(_ref) {\n  let {\n    request\n  } = _ref;\n  console.log(\"request\", request);\n  const token = getAuthToken();\n  if (token) {\n    let searchParams = new URL(request.url).searchParams;\n    // let isLogin = searchParams.get('mode') === 'login';\n    if (searchParams.get('mode')) {\n      return redirect(\"/\");\n    }\n  } else {\n    // const navigate = useNavigate();\n    // navigate('/auth');\n\n    // let history = useHistory();\n    // history.push(\"/home\")\n\n    let searchParams = new URL(request.url).searchParams;\n    if (!searchParams.get('mode')) {\n      return redirect(\"/auth\");\n    }\n  }\n  return token;\n}\nexport function checkAuthLoader() {\n  const token = getAuthToken();\n  if (!token) {\n    return redirect('/auth');\n  }\n}\nexport function isLoggedIn() {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    return false;\n  }\n  const tokenDuration = getTokenDuration();\n  if (tokenDuration < 0) {\n    return false;\n  }\n  return true;\n}","map":{"version":3,"names":["redirect","useNavigate","getTokenDuration","storedExpirationDate","localStorage","getItem","expirationDate","Date","currentDate","duration","getTime","getAuthToken","token","tokenDuration","tokenLoader","request","console","log","searchParams","URL","url","get","checkAuthLoader","isLoggedIn"],"sources":["/Users/cgiaramani/AEM-projects/to-do-mine/frontend/src/utils/auth.js"],"sourcesContent":["import { redirect, useNavigate } from 'react-router-dom';\n\nexport function getTokenDuration() {\n  const storedExpirationDate = localStorage.getItem('token-duration');\n  const expirationDate = new Date(storedExpirationDate);\n  const currentDate = new Date();\n  const duration = expirationDate.getTime() - currentDate.getTime();\n  return duration;\n}\n\nexport function getAuthToken() {\n  const token = localStorage.getItem('token');\n\n  if (!token) {\n    return null;\n  }\n\n  const tokenDuration = getTokenDuration();\n\n  if (tokenDuration < 0) {\n    return 'EXPIRED';\n  }\n\n  return token;\n}\n\nexport function tokenLoader({ request }) {\n  console.log(\"request\", request);\n  const token = getAuthToken();\n \n  if (token) {\n    let searchParams = new URL(request.url).searchParams;\n    // let isLogin = searchParams.get('mode') === 'login';\n    if (searchParams.get('mode')) {\n      return redirect(\"/\");\n    }\n  } \n  else {\n    // const navigate = useNavigate();\n    // navigate('/auth');\n\n    // let history = useHistory();\n    // history.push(\"/home\")\n\n    let searchParams = new URL(request.url).searchParams;\n    if (!searchParams.get('mode')) {\n      return redirect(\"/auth\");\n    }\n  }\n  return token;\n}\n\nexport function checkAuthLoader() {\n  const token = getAuthToken();\n\n  if (!token) {\n    return redirect('/auth');\n  }\n}\n\nexport function isLoggedIn() {\n  const token = localStorage.getItem('token');\n\n  if (!token) {\n    return false;\n  }\n  const tokenDuration = getTokenDuration();\n\n  if (tokenDuration < 0) {\n    return false;\n  }\n  return true;\n}\n"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AAExD,OAAO,SAASC,gBAAgB,GAAG;EACjC,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;EACnE,MAAMC,cAAc,GAAG,IAAIC,IAAI,CAACJ,oBAAoB,CAAC;EACrD,MAAMK,WAAW,GAAG,IAAID,IAAI,EAAE;EAC9B,MAAME,QAAQ,GAAGH,cAAc,CAACI,OAAO,EAAE,GAAGF,WAAW,CAACE,OAAO,EAAE;EACjE,OAAOD,QAAQ;AACjB;AAEA,OAAO,SAASE,YAAY,GAAG;EAC7B,MAAMC,KAAK,GAAGR,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,IAAI,CAACO,KAAK,EAAE;IACV,OAAO,IAAI;EACb;EAEA,MAAMC,aAAa,GAAGX,gBAAgB,EAAE;EAExC,IAAIW,aAAa,GAAG,CAAC,EAAE;IACrB,OAAO,SAAS;EAClB;EAEA,OAAOD,KAAK;AACd;AAEA,OAAO,SAASE,WAAW,OAAc;EAAA,IAAb;IAAEC;EAAQ,CAAC;EACrCC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,OAAO,CAAC;EAC/B,MAAMH,KAAK,GAAGD,YAAY,EAAE;EAE5B,IAAIC,KAAK,EAAE;IACT,IAAIM,YAAY,GAAG,IAAIC,GAAG,CAACJ,OAAO,CAACK,GAAG,CAAC,CAACF,YAAY;IACpD;IACA,IAAIA,YAAY,CAACG,GAAG,CAAC,MAAM,CAAC,EAAE;MAC5B,OAAOrB,QAAQ,CAAC,GAAG,CAAC;IACtB;EACF,CAAC,MACI;IACH;IACA;;IAEA;IACA;;IAEA,IAAIkB,YAAY,GAAG,IAAIC,GAAG,CAACJ,OAAO,CAACK,GAAG,CAAC,CAACF,YAAY;IACpD,IAAI,CAACA,YAAY,CAACG,GAAG,CAAC,MAAM,CAAC,EAAE;MAC7B,OAAOrB,QAAQ,CAAC,OAAO,CAAC;IAC1B;EACF;EACA,OAAOY,KAAK;AACd;AAEA,OAAO,SAASU,eAAe,GAAG;EAChC,MAAMV,KAAK,GAAGD,YAAY,EAAE;EAE5B,IAAI,CAACC,KAAK,EAAE;IACV,OAAOZ,QAAQ,CAAC,OAAO,CAAC;EAC1B;AACF;AAEA,OAAO,SAASuB,UAAU,GAAG;EAC3B,MAAMX,KAAK,GAAGR,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,IAAI,CAACO,KAAK,EAAE;IACV,OAAO,KAAK;EACd;EACA,MAAMC,aAAa,GAAGX,gBAAgB,EAAE;EAExC,IAAIW,aAAa,GAAG,CAAC,EAAE;IACrB,OAAO,KAAK;EACd;EACA,OAAO,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}