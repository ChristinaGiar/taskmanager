{"ast":null,"code":"var _jsxFileName = \"/Users/cgiaramani/AEM-projects/to-do-mine/src/pages/AuthPage.js\";\nimport React from 'react';\nimport { Form, Link, redirect, useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const authAction = async _ref => {\n  let {\n    params,\n    request\n  } = _ref;\n  let searchParams = new URL(request.url).searchParams;\n  let isLogin = searchParams.get('mode') === 'login';\n  console.log(\"isLogin: \");\n  let formData = await request.formData();\n  const data = {\n    email: formData.get('email'),\n    password: formData.get('password')\n  };\n  console.log(data);\n  console.log(\"isLogin: \", isLogin, formData);\n  const errors = {};\n\n  // validate the fields\n  if (typeof data.email !== \"string\" || !data.email.includes(\"@\")) {\n    errors.email = \"That doesn't look like an email address\";\n  }\n  if (typeof data.password !== \"string\" || data.password.length < 6) {\n    errors.password = \"Password must be > 6 characters\";\n  }\n  console.log(errors);\n  // return data if we have errors\n  if (Object.keys(errors).length) {\n    return errors;\n  }\n\n  // // otherwise create the user and redirect\n  // await createUser(email, password);\n  // return redirect(\"/dashboard\");\n  redirect(\"/\");\n  return formData;\n};\nconst AuthPage = () => {\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"email\",\n      name: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"password\",\n      name: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","Form","Link","redirect","useSearchParams","authAction","params","request","searchParams","URL","url","isLogin","get","console","log","formData","data","email","password","errors","includes","length","Object","keys","AuthPage"],"sources":["/Users/cgiaramani/AEM-projects/to-do-mine/src/pages/AuthPage.js"],"sourcesContent":["import React from 'react';\nimport { Form, Link, redirect, useSearchParams } from 'react-router-dom';\n\nexport const authAction = async ({params, request}) => {\n\n  let searchParams = new URL(request.url).searchParams;\n  let isLogin = searchParams.get('mode')==='login';\n  console.log(\"isLogin: \");\n\n    let formData = await request.formData();\n    const data = {\n      email: formData.get('email'),\n      password: formData.get('password'),\n    };\n    console.log(data);\n    console.log(\"isLogin: \", isLogin, formData);\n\n    const errors = {};\n\n    // validate the fields\n    if (typeof data.email !== \"string\" || !data.email.includes(\"@\")) {\n      errors.email =\n        \"That doesn't look like an email address\";\n    }\n  \n    if (typeof data.password !== \"string\" || data.password.length < 6) {\n      errors.password = \"Password must be > 6 characters\";\n    }\n  console.log(errors);\n    // return data if we have errors\n    if (Object.keys(errors).length) {\n      return errors;\n    }\n  \n    // // otherwise create the user and redirect\n    // await createUser(email, password);\n    // return redirect(\"/dashboard\");\n    redirect(\"/\");\n    return formData;\n}\n\nconst AuthPage = () => {\n  return (\n    <Form method=\"post\">\n        <label htmlFor='email'/>\n        <input id=\"email\" name=\"email\"></input> \n        <label htmlFor='password'/>\n        <input id=\"password\" name=\"password\"></input> \n        <button>Login</button>\n    </Form>\n  )\n}\n\nexport default AuthPage;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,eAAe,QAAQ,kBAAkB;AAAC;AAEzE,OAAO,MAAMC,UAAU,GAAG,cAA6B;EAAA,IAAtB;IAACC,MAAM;IAAEC;EAAO,CAAC;EAEhD,IAAIC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY;EACpD,IAAIG,OAAO,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC,KAAG,OAAO;EAChDC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EAEtB,IAAIC,QAAQ,GAAG,MAAMR,OAAO,CAACQ,QAAQ,EAAE;EACvC,MAAMC,IAAI,GAAG;IACXC,KAAK,EAAEF,QAAQ,CAACH,GAAG,CAAC,OAAO,CAAC;IAC5BM,QAAQ,EAAEH,QAAQ,CAACH,GAAG,CAAC,UAAU;EACnC,CAAC;EACDC,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;EACjBH,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,OAAO,EAAEI,QAAQ,CAAC;EAE3C,MAAMI,MAAM,GAAG,CAAC,CAAC;;EAEjB;EACA,IAAI,OAAOH,IAAI,CAACC,KAAK,KAAK,QAAQ,IAAI,CAACD,IAAI,CAACC,KAAK,CAACG,QAAQ,CAAC,GAAG,CAAC,EAAE;IAC/DD,MAAM,CAACF,KAAK,GACV,yCAAyC;EAC7C;EAEA,IAAI,OAAOD,IAAI,CAACE,QAAQ,KAAK,QAAQ,IAAIF,IAAI,CAACE,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAE;IACjEF,MAAM,CAACD,QAAQ,GAAG,iCAAiC;EACrD;EACFL,OAAO,CAACC,GAAG,CAACK,MAAM,CAAC;EACjB;EACA,IAAIG,MAAM,CAACC,IAAI,CAACJ,MAAM,CAAC,CAACE,MAAM,EAAE;IAC9B,OAAOF,MAAM;EACf;;EAEA;EACA;EACA;EACAhB,QAAQ,CAAC,GAAG,CAAC;EACb,OAAOY,QAAQ;AACnB,CAAC;AAED,MAAMS,QAAQ,GAAG,MAAM;EACrB,oBACE,QAAC,IAAI;IAAC,MAAM,EAAC,MAAM;IAAA,wBACf;MAAO,OAAO,EAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eACxB;MAAO,EAAE,EAAC,OAAO;MAAC,IAAI,EAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAS,eACvC;MAAO,OAAO,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE,eAC3B;MAAO,EAAE,EAAC,UAAU;MAAC,IAAI,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAS,eAC7C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB;EAAA;IAAA;IAAA;IAAA;EAAA,QACnB;AAEX,CAAC;AAAA,KAVKA,QAAQ;AAYd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}