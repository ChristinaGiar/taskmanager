{"ast":null,"code":"var _jsxFileName = \"/Users/cgiaramani/AEM-projects/to-do-mine/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useRef, useEffect } from \"react\";\nimport Task from \"./Task\";\nimport DropWrapper from \"./DropWrapper\";\nimport AddTask from \"./AddTask\";\nimport AddColumn from \"./AddColumn\";\nimport ScrollButtons from \"./ScrollButtons\";\nimport { data, statuses } from \"../data/index\";\nimport update from 'immutability-helper';\nimport classes from \"./Dashboard.module.css\";\nimport AuthContext from \"../store/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  // let count = 0;\n  const [items, setItems] = useState(data);\n  const [columnItems, setColumnItems] = useState(statuses);\n  const [counter, setCounter] = useState({\n    dataCounter: data.length + 1,\n    simpleCounter: 1\n  });\n  const crx = useContext(AuthContext);\n  const onDrop = (item, monitor, status) => {\n    const mapping = columnItems.find(si => si.status === status);\n    // crx.dropHandler(mapping.icon);\n    setItems(prevState => {\n      const newItems = prevState.filter(i => i.id !== item.id).concat({\n        ...item,\n        status,\n        icon: mapping.icon\n      });\n      return [...newItems];\n    });\n  };\n  /*\n  const moveItem = (dragIndex, hoverIndex, statusTitle) => {\n      // crx.moveHandler(dragIndex, hoverIndex);\n      let item = items[dragIndex];\n      // setItems((prevCards) =>\n      //     update(prevCards, {\n      //         $splice: [\n      //             [dragIndex, 1],\n      //             [hoverIndex, 0, prevCards[dragIndex]],\n      //         ],\n      //     }),\n      // )\n      setItems(prevState => {\n          let lastColumnItem = items.findLast(i => i.status === statusTitle)\n          const newItems = prevState.filter((i, idx) => idx !== dragIndex);\n          let lastColumnItemIndex = newItems.indexOf(lastColumnItem);\n          newItems.splice(lastColumnItemIndex+1, 0, item);\n           // const newItems = prevState.filter((i, idx) => idx !== dragIndex);\n          // // prevState.splice(dragIndex, 1)\n          // newItems.splice(hoverIndex, 0, item);\n          // console.log(prevState);\n           return [...newItems];\n      });\n  };*/\n  const addItem = status => {\n    // crx.addTaskHandler(status, counter.dataCounter, columnItems);\n    setItems(prevState => {\n      const column = columnItems.find(column => column.status === status);\n      prevState.splice(prevState.length, 0, {\n        id: counter.dataCounter,\n        icon: column.icon,\n        status: column.status,\n        title: \"Task Title\",\n        content: \"Task Description\"\n      });\n      return [...prevState];\n    });\n    setCounter(prevCounter => ({\n      ...prevCounter,\n      dataCounter: prevCounter.dataCounter + 1\n    }));\n  };\n  const deleteTask = id => {\n    // crx.deleteTaskHandler(id);\n    setItems(prevState => {\n      const newItems = prevState.filter(item => item.id !== id);\n      return [...newItems];\n    });\n  };\n  const addColumn = () => {\n    // count++\n    setCounter(prevCounter => ({\n      ...prevCounter,\n      simpleCounter: prevCounter.simpleCounter + 1\n    }));\n    setColumnItems(prevColumns => [...prevColumns, {\n      statusId: statuses.length + counter.simpleCounter,\n      status: `New Column ${counter.simpleCounter}`,\n      icon: \"ðŸŽ‰\"\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `row ${classes.box}`,\n      children: [columnItems.map((s, sIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `col-6 col-sm-4 col-md-3`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.columnWrapper,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: classes.columnHeader,\n            children: s.status.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(DropWrapper, {\n            onDrop: onDrop,\n            status: s.status,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [console.log(items), items.filter(i => i.status === s.status).map((i, idx, array) => {\n                return /*#__PURE__*/_jsxDEV(Task, {\n                  task: i,\n                  deleteTask: deleteTask\n                }, i.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 52\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n            items: items,\n            status: s.status,\n            addItem: addItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)\n      }, s.status, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(AddColumn, {\n        addColumn: addColumn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ScrollButtons, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"+ZVygEw4xqobQBaHcB15Eeig4wQ=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useContext","useState","useRef","useEffect","Task","DropWrapper","AddTask","AddColumn","ScrollButtons","data","statuses","update","classes","AuthContext","Dashboard","items","setItems","columnItems","setColumnItems","counter","setCounter","dataCounter","length","simpleCounter","crx","onDrop","item","monitor","status","mapping","find","si","prevState","newItems","filter","i","id","concat","icon","addItem","column","splice","title","content","prevCounter","deleteTask","addColumn","prevColumns","statusId","box","map","s","sIndex","columnWrapper","columnHeader","toUpperCase","console","log","idx","array"],"sources":["/Users/cgiaramani/AEM-projects/to-do-mine/src/components/Dashboard.js"],"sourcesContent":["import React, { useContext, useState, useRef, useEffect } from \"react\";\nimport Task from \"./Task\";\nimport DropWrapper from \"./DropWrapper\";\nimport AddTask from \"./AddTask\";\nimport AddColumn from \"./AddColumn\";\nimport ScrollButtons from \"./ScrollButtons\";\nimport { data, statuses } from \"../data/index\";\nimport update from 'immutability-helper'\n\n\nimport classes from \"./Dashboard.module.css\";\nimport AuthContext from \"../store/auth-context\";\n\nconst Dashboard = () => {\n    // let count = 0;\n    const [items, setItems] = useState(data);\n    const [columnItems, setColumnItems] = useState(statuses);\n    const [counter, setCounter] = useState({ dataCounter: data.length + 1, simpleCounter: 1 });\n\n\n    const crx = useContext(AuthContext);\n\n\n    const onDrop = (item, monitor, status) => {\n        const mapping = columnItems.find(si => si.status === status);\n        // crx.dropHandler(mapping.icon);\n        setItems(prevState => {\n            const newItems = prevState\n                .filter(i => i.id !== item.id)\n                .concat({ ...item, status, icon: mapping.icon });\n            return [...newItems];\n        });\n    };\n    /*\n    const moveItem = (dragIndex, hoverIndex, statusTitle) => {\n        // crx.moveHandler(dragIndex, hoverIndex);\n        let item = items[dragIndex];\n        // setItems((prevCards) =>\n        //     update(prevCards, {\n        //         $splice: [\n        //             [dragIndex, 1],\n        //             [hoverIndex, 0, prevCards[dragIndex]],\n        //         ],\n        //     }),\n        // )\n        setItems(prevState => {\n            let lastColumnItem = items.findLast(i => i.status === statusTitle)\n            const newItems = prevState.filter((i, idx) => idx !== dragIndex);\n            let lastColumnItemIndex = newItems.indexOf(lastColumnItem);\n            newItems.splice(lastColumnItemIndex+1, 0, item);\n\n            // const newItems = prevState.filter((i, idx) => idx !== dragIndex);\n            // // prevState.splice(dragIndex, 1)\n            // newItems.splice(hoverIndex, 0, item);\n            // console.log(prevState);\n\n            return [...newItems];\n        });\n    };*/\n    const addItem = (status) => {\n        // crx.addTaskHandler(status, counter.dataCounter, columnItems);\n        setItems(prevState => {\n            const column = columnItems.find(column => column.status === status)\n            prevState.splice(prevState.length, 0, {\n                id: counter.dataCounter,\n                icon: column.icon,\n                status: column.status,\n                title: \"Task Title\",\n                content: \"Task Description\"\n            });\n            return [...prevState];\n        })\n        setCounter(prevCounter => ({ ...prevCounter, dataCounter: prevCounter.dataCounter + 1 }));\n    }\n\n    const deleteTask = (id) => {\n        // crx.deleteTaskHandler(id);\n        setItems(prevState => {\n            const newItems = prevState.filter(item => item.id !== id);\n            return [...newItems];\n\n        })\n    }\n    const addColumn = () => {\n        // count++\n        setCounter(prevCounter => ({ ...prevCounter, simpleCounter: prevCounter.simpleCounter + 1 }));\n\n        setColumnItems(prevColumns => ([...prevColumns, {\n            statusId: statuses.length + counter.simpleCounter,\n            status: `New Column ${counter.simpleCounter}`,\n            icon: \"ðŸŽ‰\",\n        }]));\n    }\n\n    return (\n        <div className={\"container\"}>\n            <div className={`row ${classes.box}`}>\n                {/* {console.log(columnItems)} */}\n                {columnItems.map((s, sIndex) => (\n                    <div key={s.status} className={`col-6 col-sm-4 col-md-3`}>\n                        <div className={classes.columnWrapper}>\n                            <h2 className={classes.columnHeader}>{s.status.toUpperCase()}</h2>\n                            <DropWrapper onDrop={onDrop} status={s.status}>\n                                {/* get the status when onDrop exec */}\n                                <div>\n                                    {console.log(items)}\n                                    {items\n                                        .filter(i => i.status === s.status)\n                                        .map((i, idx, array) => {\n                                            return <Task key={i.id} task={i} deleteTask={deleteTask} />\n                                        })\n                                    }\n                                </div>\n                            </DropWrapper>\n                            {/* {console.log(\"RUN\")} */}\n                            <AddTask items={items} status={s.status} addItem={addItem}></AddTask>\n                        </div>\n                    </div>\n                ))}\n                <AddColumn addColumn={addColumn} />\n                <ScrollButtons />\n            </div>\n        </div>\n    );\n};\n\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}